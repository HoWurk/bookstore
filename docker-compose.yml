version: '3.8'

services:
  app:
    build: ./app
    #ports:
    #  - "8081:8080"
    depends_on:
      postgres:
        condition: service_healthy

  auth-service:
    build: ./auth-service
    #ports:
    #  - "8082:8080"
    environment:
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      postgres:
        condition: service_healthy

  order-service:
    build: ./order-service
    #ports:
    #  - "8083:8080"
    environment:
      - SERVER_SSL_KEY_STORE_PASSWORD=${SERVER_SSL_KEY_STORE_PASSWORD}
      - SECRET_SHARED=${SECRET_SHARED}
    depends_on:
      postgres:
        condition: service_healthy

  payment-service:
    build: ./payment-service
    #ports:
    #  - "8084:8080"
    environment:
      - SERVER_SSL_KEY_STORE_PASSWORD=${SERVER_SSL_KEY_STORE_PASSWORD}
      - SECRET_SHARED=${SECRET_SHARED}
    depends_on:
      postgres:
        condition: service_healthy

  gateway-service:
    build: ./gateway
    ports:
      - "8080:8080"
    environment:
      - SERVER_SSL_KEY_STORE_PASSWORD=${SERVER_SSL_KEY_STORE_PASSWORD}
      - SERVER_SSL_KEY_ALIAS=${SERVER_SSL_KEY_ALIAS}
      - SECRET_KEY=${SECRET_KEY}
      - SECRET_SHARED=${SECRET_SHARED}
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    build: ./postgres
    restart: always
#    volumes:
#      - ../scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_MULTIPLE_DATABASES=warehousedb,authdb,orderdb,paymentdb,gatewaydb
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
